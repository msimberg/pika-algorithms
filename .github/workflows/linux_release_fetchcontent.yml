# Copyright (c) 2020 ETH Zurich
#
# SPDX-License-Identifier: BSL-1.0
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

name: Linux CI (Release, FetchContent)

on:
  push:
    branches:
      # Development and release branches
      - main
      - release**
      # Bors branches
      - trying
      - staging

jobs:
  build:
    name: github/linux/fetchcontent/fast
    runs-on: ubuntu-latest
    container: pikaorg/pika-ci-base:13

    steps:
    - uses: actions/checkout@v2
    - name: Update apt repositories for ccache
      run: apt update
    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ccache-linux-release-fetchcontent
    - name: Check out pika
      uses: actions/checkout@v3
      with:
        repository: pika-org/pika
        ref: main
        path: pika
    - name: Install pika
      shell: bash
      working-directory: pika
      run: |
          cmake \
              . \
              -Bbuild \
              -GNinja \
              -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
              -DCMAKE_BUILD_TYPE=Debug \
              -DPIKA_WITH_MALLOC=system
          cmake --build build --target install
    - name: Configure
      shell: bash
      run: |
          cmake \
              tests/unit/build/fetchcontent \
              -Bbuild \
              -GNinja \
              -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
              -DCMAKE_BUILD_TYPE=Release \
              -DPIKA_ALGORITHMS_REPOSITORY="file:////$(pwd)" \
              -DPIKA_ALGORITHMS_TAG="$GITHUB_SHA" \
              -DPIKA_ALGORITHMS_WITH_EXAMPLES=ON \
              -DPIKA_ALGORITHMS_WITH_TESTS=OFF \
              -DPIKA_ALGORITHMS_WITH_COMPILER_WARNINGS=ON \
              -DPIKA_ALGORITHMS_WITH_COMPILER_WARNINGS_AS_ERRORS=ON \
              -DPIKA_ALGORITHMS_WITH_CHECK_MODULE_DEPENDENCIES=On

    - name: Build
      shell: bash
      run: |
          cmake --build build --target all
          cmake --build build --target examples
